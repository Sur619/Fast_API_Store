from fastapi import FastAPI
from pydantic import BaseModel
from typing import Optional, List

app = FastAPI()
books_bd = []


def autogenerate_id():
    return len(books_bd) + 1


# üì¶ –ë–∞–∑–æ–≤–∞ –º–æ–¥–µ–ª—å (—Å–ø—ñ–ª—å–Ω–∞ –ª–æ–≥—ñ–∫–∞)
class BookBase(BaseModel):
    title: str
    author: Optional[str] = None
    price: Optional[int] = None


# üì• –ú–æ–¥–µ–ª—å –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è (–±–µ–∑ ID)
class CreateBook(BookBase):
    pass


# üì§ –ú–æ–¥–µ–ª—å –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ (–∑ ID)
class Book(BookBase):
    id: int


@app.post("/add", response_model=Book)
def create_book(book: CreateBook):
    new_book = {
        "id": autogenerate_id(),
        "title": book.title,
        "author": book.author,  # ‚úÖ –ø—Ä–∞–≤–∏–ª—å–Ω–æ
        "price": book.price
    }
    books_bd.append(new_book)
    return new_book  # FastAPI —Å–∞–º –∑–∞—Å—Ç–æ—Å—É—î response_model=Book


@app.get("/", response_model=List[Book])
def get_books():
    return books_bd
